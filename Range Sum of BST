/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    /*
    void rangeSum (TreeNode* root, int L, int R, int& sum) {
            if (root == NULL)
                return;
        if (root->val > L)
        rangeSum (root->left, L, R, sum);
        else
            rangeSum (root->right, L, R, sum);
        if (root->val >= L && root->val <= R)
            sum += root->val;
        if (root->val < R)
        rangeSum (root->right, L, R, sum);
        else
            rangeSum(root->left, L, R, sum);
    }
    */
    int rangeSumBST(TreeNode* root, int L, int R) {
        if (root == NULL)
            return 0;
        
        if (root->val < L) { return rangeSumBST(root->right, L, R);}
        if (root->val > R) { return rangeSumBST(root->left, L, R);}
        return root->val + rangeSumBST(root->left, L, R) + rangeSumBST (root->right, L, R);
        //int sum = 0;
        //rangeSum(root, L, R, sum);
        //return sum;
    }
};
