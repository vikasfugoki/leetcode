/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> res;
        vector<int> cur;
        
        pathD (root, sum, res, cur);
        return res;
    }
    
    void pathD (TreeNode* root, int sum, vector<vector <int>>& res, vector<int> cur) {
        if (root == NULL)
            return;
        
        cur.push_back(root->val);
        if (root->val == sum && !root->left && !root->right) {
            res.push_back(cur);
        }
        
        
        pathD(root->left, sum-root->val, res, cur);
        pathD(root->right, sum-root->val, res, cur);
        
    }
};
