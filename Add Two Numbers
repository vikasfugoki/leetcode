/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry, sum;
        carry = 0;
        sum = l1->val + l2->val + carry;
        ListNode *head = new ListNode(sum%10);
        ListNode* temp;
        carry = sum/10;
        l1 = l1->next;
        l2 = l2->next;
        temp = head;
        while (l1 && l2) {
            sum = l1->val + l2->val + carry;
            carry = sum/10;
            ListNode * l = new ListNode(sum%10);
            temp->next = l;
            temp = l;
            l1 = l1->next;
            l2 = l2->next;
        }
        if (l1) {
            while (l1) {
                sum = l1->val + carry;
                carry = sum/10;
                ListNode* l = new ListNode(sum%10);
                temp->next = l;
                temp = l;
                l1 = l1->next;
                //l2 = l2->next;
            }
        }
        else {
            while (l2) {
               sum = l2->val + carry;
                carry = sum/10;
                ListNode* l = new ListNode(sum%10);
                temp->next = l;
                temp = l;
                //l1 = l1->next;
                l2 = l2->next; 
            }
        }
        
        if (carry != 0) {
            ListNode* l = new ListNode(carry);
            temp->next = l;
        }
        
        return head;
    }
};
