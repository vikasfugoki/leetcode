/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool sym (TreeNode* tleft, TreeNode* tright) {
        
        if (tleft == NULL && tright == NULL)
            return true;
        if (tleft == NULL || tright == NULL)
            return false;
        
        
         if (tleft->val != tright->val)
             return false;
        
        return sym(tleft->left, tright->right) && sym(tleft->right, tright->left);
    }
    
    bool isSymmetric(TreeNode* root) {
        
        if (root == NULL)
            return true;
        
        if (sym(root, root)) {
            return true;
        }
        else {
            return false;
        }
    }
};
