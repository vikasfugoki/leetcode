class Solution {
public:
    int findNumberOfLIS(vector<int>& nums) {
        int len = nums.size();
        int max = 0;
        //int ans = 0;
        vector <int> dp(len, 1);
        vector<int> ans(len, 1);
        for (int i=0; i<len; i++) {
            for (int j=0; j<i; j++) {
                
                if (nums[i] > nums[j]) {
                    if (dp[i] <= dp[j]) {
                        dp[i] = dp[j] + 1;
                        ans[i] = ans[j];
                    }
                    else if (dp[i] == dp[j] + 1) {
                        ans[i] += ans[j];
                    }
                }
                   
                
            }
        }
        
        for (int i=0; i<len; i++)
            cout << ans[i]  << " ";
        cout << endl;
        for (int i=0; i<len; i++) {
            if (max < dp[i])
                max = dp[i];
        }
        
        cout << max << endl;
        int count = 0;
        for (int i=0; i<len; i++) {
            if (max == dp[i]) {
                count += ans[i];
            }
        }
        
        return count;
    }
};
