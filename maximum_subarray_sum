class Solution {
public:
    
    int maxi (int a, int b, int c) {
        return max (a, max (b, c));
    }
    
    int maxCrossArray (vector<int> nums, int l, int m, int h) {
        
        int sum, lsum, rsum;
        int i;
        sum = 0;
        lsum = nums[m];
        for (i=m; i>=l; i--) {
            
            sum += nums[i];
            if (sum > lsum)
                lsum = sum;
        }
        //lsum = sum;
        sum = 0;
        rsum = nums[m+1];
        for (i=m+1; i<=h; i++) {
            sum += nums[i];
            if (sum > rsum)
                rsum = sum;
        }
        
        
        return maxi (lsum+rsum, lsum, rsum);
    }
    
    int maxArray (vector<int> nums, int l, int h) {
        if (l == h)
            return nums[l];
        
        int m = (l+h)/2;
        
        return maxi (maxArray(nums, l, m), maxArray(nums, m+1, h), maxCrossArray(nums, l, m, h));
    }
    
    int maxSubArray(vector<int>& nums) {
        
        return maxArray(nums, 0, nums.size()-1);
    }
};
