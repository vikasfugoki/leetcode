class Solution {
public:
    int minSteps(int n) {
        vector<int> vec(n+1, 0);
        vec[0] = 0;
        vec[1] = 0;
        //vec[2] = 2;
        if (n <= 1)
            return 0;
        vec[2] = 2;
        
        long int res=0;
        for (int i=3; i<n+1; i++) {
             res = 9999;
            for (int j=i-1; j>=1; j--) {
                if (j%(i-j) == 0) {
                    int tmp = vec[i-j];
                    // j-i is the copy
                    tmp += (i-i+j)/(i-j);
                    if (i-j == j)
                        tmp += 2;
                    else
                        tmp += 1;
                    if (res > tmp)
                        res = tmp;
                }
            }
            
            vec[i] = res;
        }
        for (int i=0; i<n+1; i++)
            cout << vec[i] << " ";
        return vec[n];
    }
};
