/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     int res;
    
    int countPairs(TreeNode* root, int distance) {
        res = 0;
        helperFun (root, distance);
        return res;
    }
    
    vector<int> helperFun (TreeNode* root, int distance) {
        if (root == NULL)
            return vector<int>(11);
        
        vector<int> left = helperFun (root->left, distance);
        vector<int> right = helperFun (root->right, distance);
        
        vector <int> A(11);
        if (root->left == NULL && root->right == NULL) {
            A[1] = 1;
            return A;
        }
        
        for (int i=0; i<=10; i++) {
            for (int j=0; j<=10; j++) {
                if (i+j<=distance)
                    res += left[i]*right[j];
            }
        }
        
        for (int i=0; i<=9; i++) {
            A[i+1] += left[i];
            A[i+1] += right[i];
        }
        
        return A;
    }
};
