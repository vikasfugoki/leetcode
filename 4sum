class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
       int len = nums.size();
        sort (nums.begin(), nums.end());
        vector <vector<int>> res;
        for (int i=0; i<len; i++) {
            for (int j=i+1; j<len; j++) {
                int front = j+1;
                int back = nums.size()-1;
                while (front< back) {
                    int sum = nums[i] + nums[j] + nums[front] + nums[back];
                    
                    if (sum < target) {
                        front++;
                    }
                    else if (sum > target) {
                        back--;
                    }
                    else {
                        vector<int> quad(4, 0);
                        quad[0] = nums[i];
                        quad[1] = nums[j];
                        quad[2] = nums[front];
                        quad[3] = nums[back];
                        res.push_back(quad);
                        while (front < back && nums[front] == quad[2]) { front++; }
                        
                        while (front < back && nums[back] == quad[3]) { back--; }
                    }
                }
                
                while (j+1 < len && nums[j] == nums[j+1]) j++;
            }
            
            while (i+1 < len && nums[i] == nums[i+1]) i++;
        }
        
        return res;
    }
};
