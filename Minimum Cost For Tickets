class Solution {
public:
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        int totalPrice = 0;
        int len = days.size();
        vector <int> price(len, 99999);
        for (int i=0; i<len; i++) {
            
            int day1 = min (price[i], totalPrice + costs[0]);
            
            int day7 = min (price[i], totalPrice + costs[1]);
            
            for (int j=i+1; j<len; j++) {
                if (days[j] <= days[i] + 6) {
                    price[j] = min (price[j], totalPrice + costs[1]);
                }
                else {
                    break;
                }
            }
            
            int day30 = min (price[i], totalPrice + costs[2]);
            for (int j=i+1; j<len; j++) {
                if (days[j] <= days[i] + 29) {
                    price[j] = min (price[j], totalPrice + costs[2]);
                }
                else {
                    break;
                }
            }
            
        cout << day1 << " " << day7 << " " << day30 << endl;
            
        for (int i=0; i<len; i++) {
            cout << price[i] << " ";
        }
            cout << endl;
            totalPrice = min (day1, min (day7, day30));
        }
        
        
        return totalPrice;
    }
};
