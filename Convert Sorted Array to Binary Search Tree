/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* buildTree (vector<int> nums, int s, int e) {
        
        if (s > e)
            return NULL;
        
        if (s == e) {
            TreeNode* newnode = new TreeNode(nums[s]);
            return newnode;
        }
        
        int mid = (s+e)/2;
        
        TreeNode* newnode = new TreeNode(nums[mid]);
        newnode->left = buildTree(nums, s, mid-1);
        newnode->right = buildTree(nums, mid+1, e);
        
        return newnode;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int len = nums.size();
        
        if (len == 0)
            return NULL;
        
        TreeNode * root = buildTree (nums, 0, len-1);
        
        return root;
    }
};
