/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* result = NULL;
        
        ListNode** lastPtr = &result;
        
        while (1) {
            
           if (l1 == NULL) {
               *lastPtr = l2;
               break;
           }
            else if (l2 == NULL) {
                *lastPtr = l1;
                break;
            }
            
            if (l1->val <= l2->val) {
                //ListNode* newNode = l1;
                *lastPtr = l1;
                l1 = l1->next;
            }
            else {
                //ListNode * newNode = l2;
                *lastPtr = l2;
                l2 = l2->next;
            }
            
            lastPtr = &((*lastPtr)->next);
        }
        
        return result;
    }
};
