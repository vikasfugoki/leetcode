class Solution {
public:
    int findLongestChain(vector<vector<int>>& pairs) {
        int len = pairs.size();
        if (len <= 1)
            return len;
        
        vector<int> dp(len, 1);
        dp[0] = 1;
        sort (pairs.begin(), pairs.end());
        
        for (int i=0; i<len; i++) {
            cout << pairs[i][0] << " " << pairs[i][1] << endl;
        }
        for (int i=1; i<len; i++) {
            for (int j=i-1; j>=0; j--) {
                if (pairs[j][1] < pairs[i][0]) {
                    if (dp[i] < dp[j] + 1)
                        dp[i] = dp[j] + 1;
                }
            }
        }
        int ans = 0;
        for (int i=0; i<len; i++) {
            cout << dp[i] << " ";
            if (ans < dp[i])
                ans = dp[i];
        }
        
        return ans;
    }
};
