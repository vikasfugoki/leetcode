class Solution {
public:
    string convert(string s, int numRows) {
        
        if (numRows == 1)
            return s;
        vector <string> vec(numRows, "");
        //cout << vec.size();
        int len = s.length();
        int p = 0;
        int mark = 0;
        while(p < len) {
            if (mark%(numRows-1) == 0) {
                for (int i=0; i<numRows && p < len; i++) {
                    vec[i] += s[p++];
                }
                mark = (mark+1)%(numRows-1);
            }
            else {
                for (int i=0; i<numRows && p < len; i++) {
                    if (i == numRows - 1 - mark) {
                        vec[i] += s[p++];
                    }
                    else {
                        vec[i] += " ";
                    }
                }
                mark = (mark+1)%(numRows-1);
            }
        }
      /*  
        for (int i=0; i<numRows; i++) {
            cout << vec[i] << endl;
        }
        */
        string str = "";
        for (int i=0; i<numRows; i++) {
            for (int j=0; j<vec[i].length(); j++) {
                if (vec[i][j] != ' ')
                    str += vec[i][j];
            }
        }
        return str;
    }
};
