class Solution {
public:
    int numTriplets(vector<int>& nums1, vector<int>& nums2) {
        unordered_map <long long int, long long int> m1, m2;
        
        for (int i=0; i<nums1.size(); i++) {
            m1[(long long int)nums1[i]*nums1[i]]++;
        }
        
        for (int i=0; i<nums2.size(); i++) {
            m2[(long long int)nums2[i]*nums2[i]]++;
        }
        int res = 0;
        for (int i=0; i<nums1.size(); i++) {
            for (int j=i+1; j<nums1.size(); j++) {
                if (m2.find((long long int) nums1[i] * nums1[j])!= m2.end()) {
                    res += m2[(long long int) nums1[i]*nums1[j]];
                }
                
            }
        }
        
        for (int i=0; i<nums2.size(); i++) {
            for (int j=i+1; j<nums2.size(); j++) {
                if (m1.find((long long int) nums2[i] * nums2[j]) != m1.end()) {
                    res += m1[(long long int) nums2[i]*nums2[j]];
                }
                
            }
        }
        
        return res;
        
        //return 0;
    }
};
