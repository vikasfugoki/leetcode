class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int len = nums.size();
        vector <vector<int>> res;
        sort (nums.begin(), nums.end());
        
        for (int i=0; i<len; i++) {
            
            int front = i+1;
            int back = nums.size()-1;
            int target =  nums[i];
            while (front < back) {
                
                int sum = nums[front] + nums[back];
                
                if (sum + target < 0) {
                    front++;
                }
                else if (sum+target > 0) {
                    back--;
                }
                else {
                   //cout << "i am here\n";
                    vector<int> triplet(3, 0);
                    triplet[0] = nums[i];
                    triplet[1] = nums[front];
                    triplet[2] = nums[back];
                    res.push_back(triplet);
                    //res.insert(res.begin(), triplet);
                    while (front < back && nums[front] == triplet[1])
                        front++;
                    while (front < back && nums[back] == triplet[2])
                        back--;
                }
                
                while (i+1 < len && nums[i] == nums[i+1])
                    i++;
            }
        }
        
        return res;
    }
};
