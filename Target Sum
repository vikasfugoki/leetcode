class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int S) {
        int len = nums.size();
        int sum = 0;
        
        for (int i=0; i<len; i++) {
            sum += nums[i];
        }
        
        if (S < -sum || S > sum) return 0;
        vector<vector <int>> dp (len+1, vector<int>(2*sum+1, 0));
        
        dp[0][sum] = 1;
        
        for (int i=1; i<=len; i++) {
            for (int j=0; j<2*sum+1; j++) {
                
                if (j+nums[i-1] < 2*sum+1) dp[i][j] += dp[i-1][j+nums[i-1]];
                if (j-nums[i-1] >= 0) dp[i][j] += dp[i-1][j-nums[i-1]];
            }
        }
        return dp[len][sum+S];
    }
};
