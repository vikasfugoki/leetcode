/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* tempA = headA;
        ListNode* tempB = headB;
        int count = 0;
        
        if (!headA || !headB)
            return NULL;
        while (headA != headB && count !=3) {
             
            
            headA = headA->next;
            headB = headB->next;
            if (headA == NULL)
                headA = tempB;
            if (headB == NULL) {
                headB = tempA;
                count++;
            }
                   
        }
        if (count == 3)
            return NULL;
        return headA;
    }
};
