class Solution {
public:
    int knightDialer(int n) {
        vector<vector<int>> mapp {{4,6}, {6,8}, {7,9},{4,8},{0,3,9},{},{0,1,7},{2,6},{1,3},{2,4}};
        
        vector<long int> hash(10, 1);
        
        if (n == 1)
            return 10;
        n--;
        while (n--) {
            vector<long int> newHash(10, 0);
            for (int i=0; i<10; i++) {
                for (int j=0; j<mapp[i].size(); j++) {
                    newHash[mapp[i][j]] = (newHash[mapp[i][j]] + hash[i])%1000000007; 
                }
                
            }
            hash = newHash;
        }
        
        long int sum = 0;
        for (int i=0; i<10; i++) {
            sum = (sum + hash[i])%1000000007;
        }
        
        return sum;
    }
};
